{"message":"this method takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/text.rs","byte_start":401,"byte_end":413,"line_start":22,"line_end":24,"column_start":13,"column_end":3,"is_primary":false,"text":[{"text":"\tfont.insert('B',","highlight_start":13,"highlight_end":18},{"text":"\t","highlight_start":1,"highlight_end":2},{"text":"\t);","highlight_start":1,"highlight_end":3}],"label":"an argument of type `[{integer}; 8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/text.rs","byte_start":395,"byte_end":401,"line_start":22,"line_end":22,"column_start":7,"column_end":13,"is_primary":true,"text":[{"text":"\tfont.insert('B',","highlight_start":7,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"/home/alan/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs","byte_start":35815,"byte_end":35821,"line_start":1103,"line_end":1103,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"    pub fn insert(&mut self, k: K, v: V) -> Option<V> {","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/text.rs","byte_start":401,"byte_end":413,"line_start":22,"line_end":24,"column_start":13,"column_end":3,"is_primary":true,"text":[{"text":"\tfont.insert('B',","highlight_start":13,"highlight_end":18},{"text":"\t","highlight_start":1,"highlight_end":2},{"text":"\t);","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":"('B', /* v */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/text.rs:22:7: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this method takes 2 arguments but 1 argument was supplied\u001b[0m\n"}
{"message":"this method takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/text.rs","byte_start":652,"byte_end":664,"line_start":39,"line_end":41,"column_start":13,"column_end":3,"is_primary":false,"text":[{"text":"\tfont.insert('D',","highlight_start":13,"highlight_end":18},{"text":"\t","highlight_start":1,"highlight_end":2},{"text":"\t);","highlight_start":1,"highlight_end":3}],"label":"an argument of type `[{integer}; 8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/text.rs","byte_start":646,"byte_end":652,"line_start":39,"line_end":39,"column_start":7,"column_end":13,"is_primary":true,"text":[{"text":"\tfont.insert('D',","highlight_start":7,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"/home/alan/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs","byte_start":35815,"byte_end":35821,"line_start":1103,"line_end":1103,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"    pub fn insert(&mut self, k: K, v: V) -> Option<V> {","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/text.rs","byte_start":652,"byte_end":664,"line_start":39,"line_end":41,"column_start":13,"column_end":3,"is_primary":true,"text":[{"text":"\tfont.insert('D',","highlight_start":13,"highlight_end":18},{"text":"\t","highlight_start":1,"highlight_end":2},{"text":"\t);","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":"('D', /* v */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/text.rs:39:7: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this method takes 2 arguments but 1 argument was supplied\u001b[0m\n"}
{"message":"this method takes 2 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src/text.rs","byte_start":681,"byte_end":693,"line_start":43,"line_end":45,"column_start":13,"column_end":3,"is_primary":false,"text":[{"text":"\tfont.insert('E',","highlight_start":13,"highlight_end":18},{"text":"\t","highlight_start":1,"highlight_end":2},{"text":"\t);","highlight_start":1,"highlight_end":3}],"label":"an argument of type `[{integer}; 8]` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/text.rs","byte_start":675,"byte_end":681,"line_start":43,"line_end":43,"column_start":7,"column_end":13,"is_primary":true,"text":[{"text":"\tfont.insert('E',","highlight_start":7,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"/home/alan/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/collections/hash/map.rs","byte_start":35815,"byte_end":35821,"line_start":1103,"line_end":1103,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"    pub fn insert(&mut self, k: K, v: V) -> Option<V> {","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src/text.rs","byte_start":681,"byte_end":693,"line_start":43,"line_end":45,"column_start":13,"column_end":3,"is_primary":true,"text":[{"text":"\tfont.insert('E',","highlight_start":13,"highlight_end":18},{"text":"\t","highlight_start":1,"highlight_end":2},{"text":"\t);","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":"('E', /* v */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0msrc/text.rs:43:7: \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m: this method takes 2 arguments but 1 argument was supplied\u001b[0m\n"}
{"message":"aborting due to 3 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 3 previous errors\u001b[0m\n"}
